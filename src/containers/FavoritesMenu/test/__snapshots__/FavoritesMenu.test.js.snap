// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FavoritesMenu should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FavoritesMenu
    dispatchShowFavorites={[MockFunction]}
    dispatchStorageDetailsUpdate={[MockFunction]}
    favoriteCharacters={
      Array [
        Object {
          "favorited": true,
          "id": 2,
          "name": "Spider-Man",
        },
      ]
    }
    storedCharacters={
      Array [
        Object {
          "favorited": false,
          "id": 1,
          "name": "Wolverine",
        },
        Object {
          "favorited": true,
          "id": 2,
          "name": "Spider-Man",
        },
        Object {
          "favorited": false,
          "id": 3,
          "name": "Hulk",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <nav
        className="fav-menu"
      >
        <ul
          className="favs-list"
        >
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="fav-list-item"
            id={2}
            onClick={[Function]}
            to="/characters"
          >
            Spider-Man
            <img
              alt="Character thubmails"
              className="fav-list-pic"
            />
          </NavLink>
        </ul>
      </nav>,
      "className": "FavoritesMenu",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <ul
          className="favs-list"
        >
          <NavLink
            activeClassName="active"
            aria-current="page"
            className="fav-list-item"
            id={2}
            onClick={[Function]}
            to="/characters"
          >
            Spider-Man
            <img
              alt="Character thubmails"
              className="fav-list-pic"
            />
          </NavLink>
        </ul>,
        "className": "fav-menu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="fav-list-item"
              id={2}
              onClick={[Function]}
              to="/characters"
            >
              Spider-Man
              <img
                alt="Character thubmails"
                className="fav-list-pic"
              />
            </NavLink>,
          ],
          "className": "favs-list",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": "2",
            "nodeType": "function",
            "props": Object {
              "activeClassName": "active",
              "aria-current": "page",
              "children": Array [
                "Spider-Man",
                <img
                  alt="Character thubmails"
                  className="fav-list-pic"
                />,
              ],
              "className": "fav-list-item",
              "id": 2,
              "onClick": [Function],
              "to": "/characters",
            },
            "ref": null,
            "rendered": Array [
              "Spider-Man",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "alt": "Character thubmails",
                  "className": "fav-list-pic",
                  "src": undefined,
                },
                "ref": null,
                "rendered": null,
                "type": "img",
              },
            ],
            "type": [Function],
          },
        ],
        "type": "ul",
      },
      "type": "nav",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <nav
          className="fav-menu"
        >
          <ul
            className="favs-list"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="fav-list-item"
              id={2}
              onClick={[Function]}
              to="/characters"
            >
              Spider-Man
              <img
                alt="Character thubmails"
                className="fav-list-pic"
              />
            </NavLink>
          </ul>
        </nav>,
        "className": "FavoritesMenu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <ul
            className="favs-list"
          >
            <NavLink
              activeClassName="active"
              aria-current="page"
              className="fav-list-item"
              id={2}
              onClick={[Function]}
              to="/characters"
            >
              Spider-Man
              <img
                alt="Character thubmails"
                className="fav-list-pic"
              />
            </NavLink>
          </ul>,
          "className": "fav-menu",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <NavLink
                activeClassName="active"
                aria-current="page"
                className="fav-list-item"
                id={2}
                onClick={[Function]}
                to="/characters"
              >
                Spider-Man
                <img
                  alt="Character thubmails"
                  className="fav-list-pic"
                />
              </NavLink>,
            ],
            "className": "favs-list",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "function",
              "props": Object {
                "activeClassName": "active",
                "aria-current": "page",
                "children": Array [
                  "Spider-Man",
                  <img
                    alt="Character thubmails"
                    className="fav-list-pic"
                  />,
                ],
                "className": "fav-list-item",
                "id": 2,
                "onClick": [Function],
                "to": "/characters",
              },
              "ref": null,
              "rendered": Array [
                "Spider-Man",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "Character thubmails",
                    "className": "fav-list-pic",
                    "src": undefined,
                  },
                  "ref": null,
                  "rendered": null,
                  "type": "img",
                },
              ],
              "type": [Function],
            },
          ],
          "type": "ul",
        },
        "type": "nav",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
