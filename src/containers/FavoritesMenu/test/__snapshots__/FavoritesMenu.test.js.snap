// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FavoritesMenu should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FavoritesMenu
    dispatchShowFavorites={[MockFunction]}
    dispatchStorageDetailsUpdate={[MockFunction]}
    favoriteCharacters={Array []}
    storedCharacters={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <section
        className="fav-menu empty"
      >
        <img
          alt="Captain America"
          className="capt-america"
          src="capt-america.gif"
        />
        <h3>
          No favorites selected
        </h3>
      </section>,
      "className": "FavoritesMenu",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <img
            alt="Captain America"
            className="capt-america"
            src="capt-america.gif"
          />,
          <h3>
            No favorites selected
          </h3>,
        ],
        "className": "fav-menu empty",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "alt": "Captain America",
            "className": "capt-america",
            "src": "capt-america.gif",
          },
          "ref": null,
          "rendered": null,
          "type": "img",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "No favorites selected",
          },
          "ref": null,
          "rendered": "No favorites selected",
          "type": "h3",
        },
      ],
      "type": "section",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <section
          className="fav-menu empty"
        >
          <img
            alt="Captain America"
            className="capt-america"
            src="capt-america.gif"
          />
          <h3>
            No favorites selected
          </h3>
        </section>,
        "className": "FavoritesMenu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <img
              alt="Captain America"
              className="capt-america"
              src="capt-america.gif"
            />,
            <h3>
              No favorites selected
            </h3>,
          ],
          "className": "fav-menu empty",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "alt": "Captain America",
              "className": "capt-america",
              "src": "capt-america.gif",
            },
            "ref": null,
            "rendered": null,
            "type": "img",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "No favorites selected",
            },
            "ref": null,
            "rendered": "No favorites selected",
            "type": "h3",
          },
        ],
        "type": "section",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
